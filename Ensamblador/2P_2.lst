     1                                  ;--------------------------------------------------------------------------
     2                                  ; MODELO EXAMEN SEGUNDO PARCIAL NÂ° 2
     3                                  ;--------------------------------------------------------------------------
     4                                  
     5                                  segment .data
     6                                  
     7 00000000 02010000                	a	dd	258
     8 00000004 7D000000                	b 	dd	125
     9 00000008 DB020000                	c	dd	731
    10                                  
    11                                  segment .bss
    12                                  
    13 00000000 ????????                	x   resd  1
    14                                  
    15                                  segment .text
    16                                  global main
    17                                  main:
    18                                  
    19 00000000 8B0C25[00000000]        	mov ecx, [a]
    20 00000007 8B1425[04000000]        	mov edx, [b]
    21 0000000E 448B0425[08000000]      	mov r8d, [c]
    22 00000016 E808000000              	call calcular
    23 0000001B 890425[00000000]        	mov [x], eax
    24                                  
    25 00000022 C3                      ret
    26                                  
    27                                  ;---------------------------------------------------------------------------
    28                                  ;............Subrutinas............
    29                                  ;---------------------------------------------------------------------------
    30                                  
    31                                  ; x = ((-b)*80)|((a>>5)-20)/((c-b)^(b&0xABCDEF));
    32                                  
    33                                  calcular:
    34                                  
    35 00000023 4831C0                  	xor rax, rax
    36 00000026 4831DB                  	xor rbx, rbx
    37 00000029 4D31D2                  	xor r10, r10
    38                                  	
    39 0000002C 89D3                    	mov ebx, edx		; ebx = b
    40 0000002E F7DB                    	neg ebx				; (-b)
    41 00000030 41BA50000000            	mov r10d, 80		; r10d = 80
    42 00000036 410FAFDA                	imul ebx, r10d		; ((-b)*80)
    43                                  	
    44 0000003A 89C8                    	mov eax, ecx		; eax = a
    45 0000003C C1F805                  	sar eax, 5			; (a>>5)
    46 0000003F 83E814                  	sub eax, 20		; ((a>>5)-20)
    47                                  	
    48 00000042 4129D0                  	sub r8d, edx		; (c-b)
    49 00000045 81E2EFCDAB00            	and edx, 0xABCDEF	; (b&0xABCDEF)
    50 0000004B 4131D0                  	xor r8d, edx		; ((c-b)^(b&0xABCDEF))
    51                                  	
    52 0000004E 99                      	cdq
    53 0000004F 41F7F8                  	idiv r8d			; ((a>>5)-20)/((c-b)^(b&0xABCDEF))
    54                                  	
    55 00000052 09C3                    	or ebx, eax			; ((-b)*80)|((a>>5)-20)/((c-b)^(b&0xABCDEF))
    56 00000054 89D8                    	mov eax, ebx
    57                                  
    58 00000056 C3                      ret
    59                                  
    60                                  ; x = ((-b)*80)|((a>>5)-20)/((c-b)^(b&0xABCDEF));
    61                                  
    62                                  
    63                                  
    64                                  
    65                                  
    66                                  
