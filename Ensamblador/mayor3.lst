     1                                  ;--------------------------------------------------------------------------
     2                                  ; PRACTICO PROGRAMACIÓN N° 4
     3                                  ;--------------------------------------------------------------------------
     4                                  segment .data
     5                                  
     6 00000000 0A000000                	a	dd	10
     7 00000004 E2FFFFFF                	b	dd 	-30
     8 00000008 14000000                	c 	dd	20
     9                                  	
    10                                  segment .bss
    11                                  
    12 00000000 ????????                	x  resd	 1
    13                                  
    14                                  segment .text
    15                                  global main
    16                                  main:
    17                                  
    18 00000000 4831C9                  	xor rcx, rcx
    19 00000003 4831D2                  	xor rdx, rdx
    20 00000006 4D31C0                  	xor r8, r8
    21                                  
    22 00000009 8B0C25[00000000]        	mov ecx, [a]	; 1er argumento por valor --> rcx
    23 00000010 8B1425[04000000]        	mov edx, [b]	; 2do argumento por valor --> rdx
    24 00000017 448B0425[08000000]      	mov r8d, [c]	; 3er argumento por valor --> r8
    25 0000001F E808000000              	call mayor
    26 00000024 890425[00000000]        	mov [x], eax
    27                                  	
    28 0000002B C3                      ret
    29                                  
    30                                  ;---------------------------------------------------------------------------
    31                                  ;............Subrutinas............
    32                                  ;---------------------------------------------------------------------------
    33                                  
    34                                  mayor:
    35 0000002C 39D1                    	cmp ecx, edx	; compara a y b
    36 0000002E 7D02                    	jge L1			; jump si a >= b		
    37 00000030 89D1                    	mov ecx, edx	; ecx = b
    38                                  	
    39 00000032 4439C1                  L1: cmp ecx, r8d	; compara a y c
    40 00000035 7D03                    	jge L2			; jump si a >= c
    41 00000037 4489C1                  	mov ecx, r8d	; ecx = c
    42                                  	
    43 0000003A 89C8                    L2:	mov eax, ecx
    44 0000003C C3                      	ret
    45                                  
    46                                  
    47                                  
    48                                  
    49                                  
    50                                  
    51                                  
    52                                  
    53                                  
    54                                  
