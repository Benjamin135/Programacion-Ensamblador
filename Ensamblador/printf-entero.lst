     1                                  
     2                                  global main
     3                                  extern printf, scanf
     4                                  
     5                                  segment .data
     6                                  
     7 00000000 EB32A4F8FFFFFFFF        	a     dq	-123456789
     8 00000008 0A25640A00              	fmt1  db 	10, "%d", 10, 0				; 64 bits --> "%lld"  (long long)
     9 0000000D 0A307825580A00          	fmt2  db	10, "0x%X", 10, 0			; dato en Hexadecimal
    10                                  	
    11 00000014 0A456C206EC3BA6D65-     	msj1  db 	10, "El número en DEC es: %d", 10, 0		; 32 bits -> "%d" (int)
    11 0000001D 726F20656E20444543-
    11 00000026 2065733A2025640A00 
    12 0000002F 0A456C206EC3BA6D65-     	msj2  db 	10, "El número en DEC es: %lld", 10, 0		; 64 bits -> "%lld" (long long)
    12 00000038 726F20656E20444543-
    12 00000041 2065733A20256C6C64-
    12 0000004A 0A00               
    13 0000004C 0A456C206EC3BA6D65-     	msj3  db 	10, "El número en HEX es: 0x%X", 10, 0		; 32 bits -> "%X" (int)
    13 00000055 726F20656E20484558-
    13 0000005E 2065733A2030782558-
    13 00000067 0A00               
    14                                  
    15                                  segment .bss
    16                                  
    17                                  
    18                                  
    19                                  segment .text
    20                                  main:
    21                                  
    22 00000000 4883EC20                sub rsp, 0x20
    23                                  
    24 00000004 48B9-                   	mov rcx, msj1		; por referencia
    24 00000006 [1400000000000000] 
    25 0000000E 488B1425[00000000]      	mov rdx, [a]		; por valor
    26 00000016 E8(00000000)            	call printf
    27                                  ; -----------------------------------------	
    28 0000001B 48B9-                   	mov rcx, msj2
    28 0000001D [2F00000000000000] 
    29 00000025 488B1425[00000000]      	mov rdx, [a]
    30 0000002D E8(00000000)            	call printf
    31                                  ; -----------------------------------------		
    32 00000032 48B9-                   	mov rcx, msj3
    32 00000034 [4C00000000000000] 
    33 0000003C 488B1425[00000000]      	mov rdx, [a]
    34 00000044 E8(00000000)            	call printf
    35                                  
    36 00000049 4883C420                add rsp, 0x20
    37                                  
    38 0000004D C3                      ret
    39                                  
    40                                  
    41                                  
    42                                  
    43                                  
    44                                  
    45                                  
    46                                  
