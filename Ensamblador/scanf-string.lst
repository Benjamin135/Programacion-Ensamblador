     1                                  
     2                                  global main
     3                                  extern printf, gets
     4                                  
     5                                  segment .data
     6                                  
     7 00000000 0A496E677265736120-     	msj    db    10, "Ingresa una cadena (max. 50 caracteres): ", 0
     7 00000009 756E6120636164656E-
     7 00000012 6120286D61782E2035-
     7 0000001B 302063617261637465-
     7 00000024 726573293A2000     
     8 0000002B 0A496E677265736120-     	msj1   db    10, "Ingresa tu nombre y apellido (max. 50 caracteres): ", 0
     8 00000034 7475206E6F6D627265-
     8 0000003D 2079206170656C6C69-
     8 00000046 646F20286D61782E20-
     8 0000004F 353020636172616374-
     8 00000058 65726573293A2000   
     9 00000060 4C6120636164656E61-     	msj2   db    "La cadena ingresada es: %s", 10, 0
     9 00000069 20696E677265736164-
     9 00000072 612065733A2025730A-
     9 0000007B 00                 
    10 0000007C 257300                  	fmt	   db    "%s", 0		; -> No es necesario el formato
    11                                  
    12                                  segment .bss
    13                                  
    14 00000000 <res 32h>               	cadena   resb   50
    15                                  
    16                                  segment .text
    17                                  main:
    18                                  
    19 00000000 4883EC20                sub rsp, 0x20
    20                                  
    21 00000004 48B9-                   	mov rcx, msj1
    21 00000006 [2B00000000000000] 
    22 0000000E E8(00000000)            	call printf
    23                                  
    24 00000013 48B9-                   	mov rcx, cadena		; por referencia
    24 00000015 [0000000000000000] 
    25 0000001D E8(00000000)            	call gets
    26                                  	
    27 00000022 48B9-                   	mov rcx, msj2		; por referencia
    27 00000024 [6000000000000000] 
    28 0000002C 48BA-                   	mov rdx, cadena		; por referencia
    28 0000002E [0000000000000000] 
    29 00000036 E8(00000000)            	call printf
    30                                  
    31 0000003B 4883C420                add rsp, 0x20
    32                                  
    33 0000003F C3                      ret
    34                                  
    35                                  
    36                                  
    37                                  
    38                                  
    39                                  
    40                                  
    41                                  
    42                                  
    43                                  
    44                                  
    45                                  
