     1                                  ;--------------------------------------------------------------------------
     2                                  ; PRACTICO PROGRAMACIÓN N° 4
     3                                  ;--------------------------------------------------------------------------
     4                                  segment .data
     5                                  
     6 00000000 0A000000140000001E-     	arreglo	  dd	10, 20, 30, 40, 50, 60, 70, 80, 90, 100
     6 00000009 000000280000003200-
     6 00000012 00003C000000460000-
     6 0000001B 00500000005A000000-
     6 00000024 64000000           
     7 00000028 0A000000                	n		  dd 	10
     8                                  	
     9                                  segment .bss
    10                                  
    11 00000000 ????????                	suma  resd	 1
    12                                  
    13                                  segment .text
    14                                  global main
    15                                  main:
    16                                  
    17 00000000 48B9-                   	mov rcx, arreglo	; paso de parametro por referencia
    17 00000002 [0000000000000000] 
    18 0000000A 8B1425[28000000]        	mov edx, [n]		; paso de parametro por valor
    19 00000011 E808000000              	call sumar
    20 00000016 890425[00000000]        	mov [suma], eax
    21                                  	
    22 0000001D C3                      ret
    23                                  
    24                                  ;---------------------------------------------------------------------------
    25                                  ;............Subrutinas............
    26                                  ;---------------------------------------------------------------------------
    27                                  
    28                                  sumar:
    29 0000001E 4D31D2                  	xor r10, r10		; indice
    30 00000021 4831C0                  	xor rax, rax		; acumulador suma
    31                                  
    32                                  Loop1:
    33 00000024 42030491                	add eax, dword[rcx+r10*4]	; suma += arreglo[i]
    34 00000028 49FFC2                  	inc r10
    35 0000002B 4939D2                  	cmp r10, rdx		
    36 0000002E 7CF4                    	jl Loop1
    37                                  	
    38 00000030 C3                      ret
    39                                  
    40                                  
    41                                  
    42                                  
    43                                  
    44                                  
    45                                  
    46                                  
