     1                                  
     2                                  global main
     3                                  extern printf, strlen, gets
     4                                  
     5                                  segment .data
     6                                  
     7 00000000 0A496E74726F647563-     	m1	 db   10, "Introducir su nombre y apellido en MAYUSCULAS: ", 0
     7 00000009 6972207375206E6F6D-
     7 00000012 627265207920617065-
     7 0000001B 6C6C69646F20656E20-
     7 00000024 4D4159555343554C41-
     7 0000002D 533A2000           
     8 00000031 5375206E6F6D627265-     	m2   db   "Su nombre y apellido en minusculas es: %s", 10, 0
     8 0000003A 2079206170656C6C69-
     8 00000043 646F20656E206D696E-
     8 0000004C 757363756C61732065-
     8 00000055 733A2025730A00     
     9                                  
    10                                  segment .bss
    11                                  
    12 00000000 <res 32h>               	cadena   resb  50
    13                                  
    14                                  segment .text
    15                                  main:
    16                                  
    17 00000000 4883EC20                sub rsp, 0x20
    18                                  
    19                                  ; ------ PRINTF ------
    20 00000004 48B9-                   	mov rcx, m1
    20 00000006 [0000000000000000] 
    21 0000000E E8(00000000)            	call printf
    22                                  	
    23                                  ; ------ GETS ------
    24 00000013 48B9-                   	mov rcx, cadena
    24 00000015 [0000000000000000] 
    25 0000001D E8(00000000)            	call gets
    26                                  	
    27                                  ; ------ STRLEN ------
    28 00000022 48B9-                   	mov rcx, cadena
    28 00000024 [0000000000000000] 
    29 0000002C E8(00000000)            	call strlen
    30                                  	
    31                                  ; ------ CICLO ------
    32 00000031 48BB-                   	mov rbx, cadena
    32 00000033 [0000000000000000] 
    33 0000003B 4889C1                  	mov rcx, rax
    34                                  	ciclo:
    35 0000003E 8A03                    		mov al, [rbx]
    36 00000040 0C20                    		or al, 0x20
    37 00000042 8803                    		mov [rbx], al
    38 00000044 48FFC3                  		inc rbx
    39 00000047 E2F5                    	loop ciclo
    40                                  	
    41                                  ; ------ PRINTF ------
    42 00000049 48B9-                   	mov rcx, m2
    42 0000004B [3100000000000000] 
    43 00000053 48BA-                   	mov rdx, cadena
    43 00000055 [0000000000000000] 
    44 0000005D E8(00000000)            	call printf
    45                                  
    46 00000062 4883C420                add rsp, 0x20
    47                                  
    48 00000066 C3                      ret
    49                                  
    50                                  
    51                                  
    52                                  
    53                                  
    54                                  
    55                                  
    56                                  
    57                                  
    58                                  
    59                                  
