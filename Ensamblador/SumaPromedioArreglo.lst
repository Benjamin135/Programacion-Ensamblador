     1                                  
     2                                  segment .data
     3                                  
     4 00000000 0A000000140000001E-     	arreglo dd  10, 20, 30, 40, 50, 60, 70, 80, 90, 100
     4 00000009 000000280000003200-
     4 00000012 00003C000000460000-
     4 0000001B 00500000005A000000-
     4 00000024 64000000           
     5 00000028 0A000000                	n 		dd  10
     6                                  
     7                                  segment .bss
     8                                  
     9 00000000 ????????                	suma  resd  1
    10 00000004 ????????                	prom  resd  1
    11                                  
    12                                  segment .text
    13                                  global main
    14                                  main:
    15                                  
    16 00000000 48B9-                   	mov rcx, arreglo	; referencia
    16 00000002 [0000000000000000] 
    17 0000000A 8B1425[28000000]        	mov edx, [n]		; valor
    18 00000011 49B8-                   	mov r8, suma		; referencia
    18 00000013 [0000000000000000] 
    19 0000001B 49B9-                   	mov r9, prom		; referencia
    19 0000001D [0400000000000000] 
    20                                  	
    21 00000025 E801000000              	call calcular
    22                                  
    23 0000002A C3                      ret
    24                                  
    25                                  ;---------------------------------------------------------------------------
    26                                  ;............Subrutinas............
    27                                  ;---------------------------------------------------------------------------
    28                                  
    29                                  calcular:
    30                                  
    31 0000002B 4D31D2                  	xor r10, r10		; indice
    32 0000002E 4831C0                  	xor rax, rax 		; acumulador suma
    33                                  	
    34                                  	loop1:
    35 00000031 42030491                		add eax, [rcx+r10*4]	; suma += arreglo[i]
    36 00000035 49FFC2                  		inc r10
    37 00000038 4939D2                  		cmp r10, rdx
    38 0000003B 7CF4                    		jl loop1
    39 0000003D 418900                  		mov [r8], eax		; almacenar "suma"
    40                                  		
    41                                  	; eax contiene el dividendo
    42 00000040 89D3                    	mov ebx, edx
    43 00000042 99                      	cdq
    44 00000043 F7FB                    	idiv ebx
    45 00000045 418901                  	mov[r9], eax		; almacenar "promedio"
    46                                  
    47 00000048 C3                      ret
    48                                  
    49                                  
    50                                  
    51                                  
    52                                  
    53                                  
    54                                  
    55                                  
    56                                  
    57                                  
    58                                  
    59                                  
    60                                  
    61                                  
    62                                  
